{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
        "Development" :{
            "type" : "string",
            "defaultValue": "ARMDev",
            "metadata": {
                "description" : "Specifies Development resources nickname"
            }
        },
        
        "VirtualNetworkName" :{
        "type" : "string",
        "defaultValue": "VNET-DEV",
        "metadata": {
            "description" : "Specifies the name for the Development Virtual Network"
        }
        }, 
        
		"vnetPrefix" :{
        "type" : "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
            "description" : "Specifies the network prefix "
        }
        }, 
		
		
        "vnetSubnetName1" :{
        "type" : "string",
        "defaultValue": "Subnet-DEV-1",
        "metadata": {
            "description" : "Specifies the name for the Development subnet 1."
        }
        }, 
        
		"vnetSubnetPrefix1" :{
        "type" : "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
            "description" : "Specifies the subnet 1 Addres Prefix "
        }
        }, 
		
		"vnetSubnetName2" :{
        "type" : "string",
        "defaultValue": "Subnet-DEV-2",
        "metadata": {
            "description" : "Specifies the name for the Development subnet 2."
        }
        },
	
		"vnetSubnetPrefix2" :{
        "type" : "string",
        "defaultValue": "10.0.1.0/24",
        "metadata": {
            "description" : "Specifies the subnet 2 Addres Prefix "
        }
        },
		
		"StorageAccountName" :{
        "type" : "string",
        "defaultValue": "devstoragegeneral",
        "metadata": {
            "description" : "Specifies storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only."
        }
        },
		"StorageSkuName" :{
        "type" : "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
            "Standard_LRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Standard_ZRS",
            "Premium_LRS"
        ],
        "metadata": {
            "description" : "Specifies Pricing Tier or Stock Keeping Unit (SKU). The acceptable values for this parameter are Standard Locally Redundant Storage (Standard_LRS), Standard Geo Replicated Storage (Standard_GRS), Standard Read-Access Geo Replicated Storage (Standard_RAGRS),Standard Zone Redundant Storage (Standard_ZRS), Provisioned IO Locally Redundant Storage (Premium_LRS)"
        }
    }, 
     "SqlSrvDevUsername" :{
        "type" : "string",
		"minLength": 1,
        "defaultValue": "DevAdmin",
        "metadata": {
            "description" : "Specifies the Development SQL Database server username administrator for the new server."
        }
    }, 
      "SqlSrvDevPassword" :{
        "type" : "securestring",
		"minLength": 8,
        "metadata": {
            "description" : "Specifies the Development SQL Database server password administrator for the new server"
        }
    },
     "SqlSrDevVersion" :{
        "type" : "string",
        "defaultValue": "12.0",
        "allowedValues": [
            "11.0",
            "12.0"
        ],
        "metadata": {
            "description" : "Specifies the SQL server version. The acceptable values for this parameter are: 12.0 to create a version 11 server, or 12.0 to create a version 12 server."
        }
    },
    "DevDBName1"  :{
        "type" : "string",
        "defaultValue": "DevDB1",
        "metadata": {
            "description" : "Specifies the name for the first database"
        }
    },
     "SqlDatabaseEdition1" :{
        "type" : "string",
        "defaultValue": "Basic",
        "allowedValues": [
            "Default",
            "None", 
            "Premium", 
            "Basic", 
            "Standard", 
            "DataWarehouse", 
            "Free"
        ],
        "metadata": {
            "description" : "Specifies the edition to assign to the first database. The acceptable values for this parameter are: Default, None, Premium, Basic, Standard, DataWarehouse, and Free."
        }
    },
    "DevDBName2"  :{
        "type" : "string",
        "defaultValue": "DevDB2",
        "metadata": {
            "description" : "Specifies the name for the second database"
        }
    },
         "SqlDatabaseEdition2" :{
        "type" : "string",
        "defaultValue": "Basic",
        "allowedValues": [
            "Default",
            "None", 
            "Premium", 
            "Basic", 
            "Standard", 
            "DataWarehouse", 
            "Free"
        ],
        "metadata": {
            "description" : "Specifies the edition to assign to the second database. The acceptable values for this parameter are: Default, None, Premium, Basic, Standard, DataWarehouse, and Free."
        }
    },
     "SqlDatabaseServiceObjectiveName" :{
        "type" : "string",
        "defaultValue": "Basic",
        "allowedValues": [
            "Basic", 
            "S0", 
            "S1", 
            "S2", 
            "S3", 
            "P1", 
            "P2", 
            "P3", 
            "P4", 
            "P6", 
            "P11", 
            "P15"
        ],
        "metadata": {
            "description" : "Specifies the name of the service objective to assign to the Azure SQL Database.The acceptable values for this parameter are: Basic, S0 , S1, S2, S3, P1, P2, P3, P4, P6, P11, and P15"
        }
    },
        "SqlCollationName" :{
        "type" : "string",
        "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
        "metadata": {
            "description" : "Specifies the name of the SQL database collation https://msdn.microsoft.com/en-us/library/ms143515(v=sql.105).aspx "
        }
    },

    "PublicLocalIP" :{
        "type" : "string",
        "metadata": {
            "description" : "You public IP Address you can view at http://ipinfo.io/" 
        }
    }
    },
   "variables": { 
       "StorageAccountNameLC" : "[toLower(parameters('StorageAccountName'))]",
       "DevelopmentLC" : "[toLower(parameters('Development'))]",
       "Development" :  "[replace(variables('DevelopmentLC'),'-','')]",
	   "Sqlsrv" :  "sqlsrv-",
       "SqlSrvDevelopment" : "[concat(variables('Sqlsrv'), variables('Development'))]",
       "fullyQualifiedDevDatabase1Name": "[concat(variables('SqlSrvDevelopment'), '/', parameters('DevDBName1'))]",
       "fullyQualifiedDevDatabase2Name": "[concat(variables('SqlSrvDevelopment'), '/', parameters('DevDBName2'))]"
    	   
    },
    "resources": [
        {
			"comments": "DevelopmentVirtualNetwork",
            "name": "[parameters('VirtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "Development Virtual Network"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('vnetSubnetName1')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetSubnetPrefix1')]"
                        }
                    },
                    {
                        "name": "[parameters('vnetSubnetName2')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetSubnetPrefix2')]"
                        }
                    }
                ]
            }
        },
        {
			"comments": "DevelopmentStorageAccountName",
            "name": "[variables('StorageAccountNameLC')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "Development Storage Account"
            },
            "properties": {
                "accountType": "[parameters('StorageSkuName')]"
            }
        },
        {
			"comments": "DevelopmentSQLServerName",
            "name": "[variables('SqlSrvDevelopment')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [],
            "tags": {
                "displayName": "Development SQL Server"
            },
            "properties": {
                "administratorLogin": "[parameters('SqlSrvDevUsername')]",
                "administratorLoginPassword": "[parameters('SqlSrvDevPassword')]",
				"version": "[parameters('SqlSrDevVersion')]"
            },
            "resources": [
                {
                    "name": "AllowAllWindowsAzureIps",
                    "type": "firewallrules",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SqlSrvDevelopment'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                },
				{
                    "name": "PublicLocalIP",
                    "type": "firewallrules",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SqlSrvDevelopment'))]"
                    ],
                    "properties": {
                        "startIpAddress": "[parameters('PublicLocalIP')]",
                        "endIpAddress": "[parameters('PublicLocalIP')]"
                    }
                }
            ]
        },
        {
			"comments": "DevelopmentDatabase1",
            "name": "[variables('fullyQualifiedDevDatabase1Name')]",
            "type": "Microsoft.Sql/servers/databases",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('SqlSrvDevelopment'))]"
            ],
            "tags": {
                "displayName": "DevDatabase1"
            },
            "properties": {
                "collation": "[parameters('SqlCollationName')]",
                "edition": "[parameters('SqlDatabaseEdition1')]",
                "requestedServiceObjectiveName": "[parameters('SqlDatabaseServiceObjectiveName')]"
            }
        },
        {
			"comments": "DevelopmentDatabase2",
            "name": "[variables('fullyQualifiedDevDatabase2Name')]",
            "type": "Microsoft.Sql/servers/databases",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('SqlSrvDevelopment'))]"
            ],
            "tags": {
                "displayName": "DevDatabase2"
            },
            "properties": {
                "collation": "[parameters('SqlCollationName')]",
                "edition": "[parameters('SqlDatabaseEdition2')]",
                "requestedServiceObjectiveName": "[parameters('SqlDatabaseServiceObjectiveName')]"
            }
        }
    ],
	"outputs": {  
       "SQLServerResourceID": {
			"type": "string",
			"value": "[resourceId('Microsoft.Sql/servers', variables('SqlSrvDevelopment'))]"
		},
		"sqlSvrFqdn": {
			"type": "string",
			"value": "[reference(concat('Microsoft.Sql/servers/', variables('SqlSrvDevelopment'))).fullyQualifiedDomainName]"
		},
		"SqlServerURL": {
			"type": "string",
			"value": "[reference(variables('SqlSrvDevelopment')).fullyQualifiedDomainName]"
		},
		"DB1ResourceID": {
			"type": "string",
			"value": "[resourceId('Microsoft.Sql/servers/databases', variables('SqlSrvDevelopment'), parameters('DevDBName1'))]"
		},
		"DB2ResourceID": {
			"type": "string",
			"value": "[resourceId('Microsoft.Sql/servers/databases', variables('SqlSrvDevelopment'), parameters('DevDBName2'))]"
		},
		"DatabaseConnectionString2" :
		{ 
			"type": "string",
			"value": "[concat('Server=tcp:',reference(variables('SqlSrvDevelopment')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('DevDBName1'),';Persist Security Info=False;User ID=',reference(variables('SqlSrvDevelopment')).administratorLogin,';Password=',reference(variables('SqlSrvDevelopment')).administratorLoginPassword,';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]" 
		},
		"DatabaseConnectionString1" :
		{ 
			"type": "string",
			"value": "[concat('Server=tcp:',reference(variables('SqlSrvDevelopment')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('DevDBName2'),';Persist Security Info=False;User ID=',reference(variables('SqlSrvDevelopment')).administratorLogin,';Password=',reference(variables('SqlSrvDevelopment')).administratorLoginPassword,';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]" 
		}
	}
}
